@model Indexer.ViewModels.DocTypeAIndexVM
@{
    ViewBag.Title = "Index";
}

<h2 class="mb-4">Document Type A</h2>

@*@using (Html.BeginForm("Index", "DocTypeA", FormMethod.Post, new { @class = "control-label form-inline", @id = "options-form" }))
{
    <input id="SelectedPage" name="SelectedPage" type="hidden" value="1">
}*@

<div class="card mb-4" style="width: 18rem;">
    <div class="card-body">
        <h5 class="card-title text-center mb-2">Statistics</h5>
        <p class="text-center">@Model.CompletedWorkItemCount work items completed.</p>
        <p class="text-center">@Model.VerifiedWorkItemCount work items verified.</p>
        <p class="text-center">@Model.IncompleteWorkItemCount of @Model.TotalWorkItemCount left to finish.</p>
    </div>
</div>

<div class="row">
    <div class="col-md-8 mb-4">
        <h3>Incomplete Work Items</h3>
        @if (Model.IncompleteWorkItems == null || Model.IncompleteWorkItems.Count() < 1)
        {
            <p>No Work Items were found.</p>
        }
        else
        {

            @*@Html.Partial("PagerPartial", new Indexer.ViewModels.PagerViewModel() { SelectedPage = Model.SelectedPage, TotalPages = Model.TotalPages })*@

            <table class="table table-striped table-hover table-responsive">
                <thead class="table-dark">
                    <tr class="text-nowrap">
                        <th>Work Item ID</th>
                        <th>File Number</th>
                        <th>Locked By</th>
                        <th>Completed on</th>
                        <th>Verified on</th>
                        <th>Last Updated By</th>
                        <th></th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model.IncompleteWorkItems)
                    {
                        bool enableCompleteBtn = item.CompletedBy== null && item.NotWorkable != true;
                        bool enableVerifyBtn = item.CompletedBy != null && item.VerifiedBy == null && item.NotWorkable != true;
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.WorkItemID)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FileNumber)
                            </td>
                            <td>
                                @if (item.LockedBy != null)
                                {@Html.DisplayFor(modelItem => item.LockedOn)}
                            </td>
                            <td>
                                @if (item.CompletedBy != null)
                                {@Html.DisplayFor(modelItem => item.CompletedOn)}
                            </td>
                            <td>
                                @if (item.VerifiedBy != null)
                                {@Html.DisplayFor(modelItem => item.VerifiedOn)}
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UpdatedBy)
                            </td>
                            <td>
                                @if (enableCompleteBtn)
                                {
                                    <a class="btn btn-primary text-nowrap btn"
                                       href="@Url.Action("IndexDocument", "DocTypeA", new { workItemID = item.WorkItemID, assignToUser = true })">
                                        Index
                                    </a>
                                }
                                @if (enableVerifyBtn)
                                {
                                    <a class="btn btn-success text-nowrap btn" }
                                       href="@Url.Action("VerifyDocument", "DocTypeA", new { workItemID = item.WorkItemID, assignToUser = true  })">
                                        Verify
                                    </a>
                                }


                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        @*@Html.Partial("PagerPartial", new ImageIndexer.ViewModels.PagerViewModel() { SelectedPage = Model.SelectedPage, TotalPages = Model.TotalPages })*@
    </div>
    <div class="col-md-4"></div>
    <div class="col-md-4">
        <h3>Recently Completed</h3>
        @if (Model.RecentlyCompletedWorkItems == null || Model.RecentlyCompletedWorkItems.Count() < 1)
        {
            <p>No recently completed works items were found.</p>
        }
        else
        {
            <table class="table table-striped table-hover table-responsive">
                <thead class="table-dark">
                    <tr class="text-nowrap">
                        <th>Work Item ID</th>
                        <th>File Number</th>
                        <th>Completed on</th>
                        <th>Last Updated By</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model.RecentlyCompletedWorkItems)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.WorkItemID)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FileNumber)
                            </td>
                            <td>
                                {@Html.DisplayFor(modelItem => item.CompletedOn)}
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UpdatedBy)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
    <div class="col-md-4">
        <h3>Recently Verified</h3>
        @if (Model.RecentlyVerifiedWorkItems == null || Model.RecentlyVerifiedWorkItems.Count() < 1)
        {
            <p>No recently verified works items were found.</p>
        }
        else
        {
            <table class="table table-striped table-hover table-responsive">
                <thead class="table-dark">
                    <tr class="text-nowrap">
                        <th>Work Item ID</th>
                        <th>File Number</th>
                        <th>Verified on</th>
                        <th>Last Updated By</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model.RecentlyVerifiedWorkItems)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.WorkItemID)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FileNumber)
                            </td>

                            <td>
                                {@Html.DisplayFor(modelItem => item.VerifiedOn)}
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.UpdatedBy)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>



